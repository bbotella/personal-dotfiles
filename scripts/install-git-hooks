#!/bin/bash

# Git Hook Installer
# Installs git hooks into the current repository

set -e

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}ü™ù Git Hook Installer${NC}"
echo "===================="
echo

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Not in a git repository${NC}"
    exit 1
fi

DOTFILES_HOOKS_DIR="$HOME/personal-dotfiles/git/hooks"
GIT_HOOKS_DIR="$(git rev-parse --git-dir)/hooks"

if [ ! -d "$DOTFILES_HOOKS_DIR" ]; then
    echo -e "${RED}‚ùå Dotfiles hooks directory not found: $DOTFILES_HOOKS_DIR${NC}"
    exit 1
fi

echo -e "${BLUE}üìç Installing hooks from: ${YELLOW}$DOTFILES_HOOKS_DIR${NC}"
echo -e "${BLUE}üìç Installing hooks to: ${YELLOW}$GIT_HOOKS_DIR${NC}"
echo

# Install each hook
for hook_file in "$DOTFILES_HOOKS_DIR"/*; do
    if [ -f "$hook_file" ] && [ -x "$hook_file" ]; then
        hook_name=$(basename "$hook_file")
        target_file="$GIT_HOOKS_DIR/$hook_name"
        
        echo -e "${BLUE}üìã Installing hook: ${YELLOW}$hook_name${NC}"
        
        # Backup existing hook if it exists
        if [ -f "$target_file" ]; then
            echo -e "${YELLOW}  üíæ Backing up existing hook to $hook_name.backup${NC}"
            mv "$target_file" "$target_file.backup"
        fi
        
        # Copy and make executable
        cp "$hook_file" "$target_file"
        chmod +x "$target_file"
        echo -e "${GREEN}  ‚úÖ Installed $hook_name${NC}"
    fi
done

echo
echo -e "${GREEN}‚úÖ Git hooks installation complete!${NC}"
echo
echo -e "${YELLOW}üí° Installed hooks:${NC}"
ls -la "$GIT_HOOKS_DIR" | grep -v ".backup" | grep -v "^d" | sed 's/^/  /'